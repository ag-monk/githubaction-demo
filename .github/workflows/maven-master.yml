name: Master Branch

on:
  push:
    branches:
      - 'master'
  

jobs:

  test:
    name: Run maven tests
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.4
      - name: Maven Package
        run: mvn -B clean package -DskipTests
      - name: Maven Verify
        run: mvn -B clean verify -Pintegration-test

  provisionStage:
    name: Release approval and Gating
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: actiongit-staging
    steps:
    # Checkout
    - name: Checkout
      uses: actions/checkout@v1
      
 # updateJira:
  #  needs: provisionStage
   # runs-on: ubuntu-latest
   # steps:  
   # - run: |
   #     echo "Approval done, running the script now."
   #     sudo apt-get update
   #     exit 1
  CreateIssues:
    needs: provisionStage
    runs-on: ubuntu-latest
    steps:
    - name: Create issue using REST API
      run: |
        curl --request POST \
        --url https://api.github.com/repos/${{ github.repository }}/issues \
        --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
        --header 'content-type: application/json' \
        --data '{
          "title": "Automated issue for commit: ${{ github.sha }}",
          "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
          }' \
        --fail
            
         

  docker:
    name: Publish - Docker Hub
    runs-on: ubuntu-18.04
    needs: CreateIssues
    env:
      REPO: ${{ secrets.DOCKER_REPO }}

    steps:
      - uses: actions/checkout@v1
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASS }}
      - name: Build Docker image
        run: docker build -t $REPO:latest -t $REPO:${GITHUB_SHA::8} .
      - name: Publish Docker image
        run: docker push $REPO

  UpdateIssues:
    needs: docker
    runs-on: ubuntu-latest
    steps:
    - name: Update issue using REST API
      uses: actions/checkout@v1
      with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting!'
            })
     
